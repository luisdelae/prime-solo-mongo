// 1. Create a collection named orders.

	db.createCollection(‘orders’)

// 2. Insert at least 3 documents that represent an order. IMPORTANT: See section below for fields.

db.orders.insert({orderDate: new Date("2015-1-1"), orderTotal: 50, lineItems: [{unitPrice: 2, quantity: 5, productName: 'pepsi'}, {unitPrice: 2, quantity: 10, productName: 'chips'}, {unitPrice: 4, quantity: 1, productName: 'salsa'}]})
	 db.orders.insert({orderDate: new Date("2016-2-16"), orderTotal: 150, lineItems: [{unitPrice: 5, quantity: 8, productName: 'toys'}, {unitPrice: .5, quantity: 6, productName: 'candy'}, {unitPrice: 5, quantity: 100, productName: 'paper'}]})
	 db.orders.insert({orderDate: new Date("2016-1-10"), orderTotal: 70, lineItems: [{unitPrice: 1, quantity: 3, productName: 'water'}, {unitPrice: 3, quantity: 52, productName: 'matches'}, {unitPrice: 100, quantity: 1, productName: 'tent'}]})

// 3. Find a single order document, any order document.

	db.getCollection('orders').find({})

// 4. Find all orders and make them look pretty.

	db.getCollection('orders').find({}).pretty

// 5. Find all orders with an orderDate that is prior to 1/1/2016.

	db.getCollection('orders').find({orderDate: {$lt: ISODate("/2016-01-01/")}})

// 6. Find all orders with an orderDate that is after 1/1/2016.

	db.getCollection('orders').find({orderDate: {$gt: ISODate("/2016-01-01/")}})

// 7. Find orders with lineItems that have a quantity that is less than 50, but greater than 5.

	db.getCollection('orders').find({$and: [{'lineItems.quantity': {$lt: 50}}, {'lineItems.quantity': {$gt: 5}}]})
